{"version":3,"sources":["components/SearchInput/SearchInput.jsx","components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["SearchInput","handleChange","filterQuery","status","type","onChange","name","value","className","TodoList","state","filterBySelect","all","todo","completed","active","event","target","setState","this","props","todos","selectedUser","selectedUserId","filterTodos","filter","title","toLowerCase","includes","map","id","userId","classNames","key","checked","readOnly","onClick","React","Component","getUser","fetch","then","response","json","data","CurrentUser","user","updateUser","prevProps","phone","email","clearUser","App","idUser","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6daf09e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchInput.scss';\n\nexport const SearchInput = ({ handleChange, filterQuery, status }) => (\n  <div>\n    <label>\n      {`Search: `}\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        name=\"filterQuery\"\n        value={filterQuery}\n        className=\"position\"\n      />\n    </label>\n\n    <select\n      name=\"status\"\n      value={status}\n      onChange={handleChange}\n      className=\"position\"\n    >\n      <option value=\"all\">All</option>\n      <option value=\"completed\">Completed</option>\n      <option value=\"active\">Active</option>\n    </select>\n\n  </div>\n);\n\nSearchInput.propTypes = {\n  filterQuery: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { SearchInput } from '../SearchInput/SearchInput';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterQuery: '',\n    status: 'all',\n  }\n\n  filterBySelect = {\n    all: todo => todo,\n    completed: todo => todo.completed,\n    active: todo => !todo.completed,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, selectedUser, selectedUserId } = this.props;\n    const { filterQuery, status } = this.state;\n\n    const filterTodos = todos\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(filterQuery.toLowerCase())\n        && this.filterBySelect[status](todo));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <SearchInput\n          status={status}\n          filterQuery={filterQuery}\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(({ id, userId, completed, title }) => (\n              <li\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !completed,\n                    'TodoList__item--checked': completed,\n                  })}\n                key={id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={completed}\n                    readOnly\n                  />\n                  <p>{title}</p>\n                </label>\n                <button\n                  className={classNames('button TodoList__user-button', {\n                    // eslint-disable-next-line max-len\n                    'TodoList__user-button--selected': selectedUserId === userId,\n                  })}\n                  type=\"button\"\n                  onClick={() => selectedUser(userId, id)}\n                >\n                  {`UserId #${userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectedUserId: PropTypes.number.isRequired,\n  selectedUser: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users';\n\nexport const allTodos = () => fetch(TODOS_URL)\n  .then(response => response.json())\n  .then(todo => todo.data);\n\nexport const getUser = userId => fetch(`${USERS_URL}/${userId}`)\n  .then(response => response.json())\n  .then(todo => todo.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  async componentDidMount() {\n    const { userId } = this.props;\n    const selectedUser = await getUser(userId);\n\n    this.updateUser(selectedUser);\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { userId } = this.props;\n\n    if (prevProps.userId !== userId) {\n      const selectedUser = await getUser(userId);\n\n      this.updateUser(selectedUser);\n    }\n  }\n\n  updateUser = (user) => {\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { phone, id, name, email } = user;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <button\n          type=\"button\"\n          onClick={clearUser}\n          className=\"ui button\"\n        >\n          Clear\n        </button>\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { allTodos } from './api';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await allTodos();\n\n    const filteredTodos = todos.filter(todo => todo.title && todo.id);\n\n    this.setState({\n      todos: filteredTodos,\n    });\n  }\n\n  selectedUser = (idUser, id) => {\n    this.setState({\n      selectedUserId: idUser,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={this.selectedUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}