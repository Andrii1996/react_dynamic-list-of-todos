{"version":3,"sources":["components/SearchInput/SearchInput.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["SearchInput","handleChange","search","showTodo","type","onChange","name","value","className","TodoList","state","filterBySelect","all","callback","completed","active","event","target","setState","this","props","todos","selectedUser","selectedUserId","filterTodos","filter","todo","title","toLowerCase","includes","map","id","userId","classNames","key","checked","readOnly","onClick","React","Component","CurrentUser","users","updateUser","allUsers","prevProps","phone","email","clear","fetch","then","response","json","data","App","idUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a9305fb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchInput.scss';\n\nexport const SearchInput = ({ handleChange, search, showTodo }) => (\n  <div>\n    <label>\n      {`Search: `}\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        name=\"search\"\n        value={search}\n        className=\"position\"\n      />\n    </label>\n\n    <select\n      name=\"showTodo\"\n      value={showTodo}\n      onChange={handleChange}\n      className=\"position\"\n    >\n      <option value=\"all\">All</option>\n      <option value=\"completed\">Completed</option>\n      <option value=\"active\">Active</option>\n    </select>\n\n  </div>\n);\n\nSearchInput.propTypes = {\n  search: PropTypes.string.isRequired,\n  showTodo: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { SearchInput } from '../SearchInput/SearchInput';\n\nexport class TodoList extends React.Component {\n  state = {\n    search: '',\n    showTodo: 'all',\n  }\n\n  filterBySelect = {\n    all: callback => callback,\n    completed: callback => callback.completed,\n    active: callback => !callback.completed,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, selectedUser, selectedUserId } = this.props;\n    const { search, showTodo } = this.state;\n\n    const filterTodos = todos\n      .filter(todo => todo.title.toLowerCase().includes(search.toLowerCase())\n        && this.filterBySelect[showTodo](todo));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <SearchInput\n          showTodo={showTodo}\n          search={search}\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(({ id, userId, completed, title }) => (\n              <li\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !completed,\n                    'TodoList__item--checked': completed,\n                  })}\n                key={id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={completed}\n                    readOnly\n                  />\n                  <p>{title}</p>\n                </label>\n                <button\n                  className={classNames('button TodoList__user-button', {\n                    // eslint-disable-next-line max-len\n                    'TodoList__user-button--selected': userId === selectedUserId,\n                  })}\n                  type=\"button\"\n                  onClick={() => selectedUser(userId)}\n                >\n                  {`UserId #${userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectedUserId: PropTypes.number.isRequired,\n  selectedUser: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    users: {},\n  }\n\n  async componentDidMount() {\n    const { userId, allUsers } = this.props;\n    const selectedUser = await allUsers(userId);\n\n    this.updateUser(selectedUser);\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { userId, allUsers } = this.props;\n\n    if (prevProps.userId === userId) {\n      return;\n    }\n\n    const selectedUser = await allUsers(userId);\n\n    this.updateUser(selectedUser);\n  }\n\n  updateUser = (id) => {\n    this.setState({\n      users: id,\n    });\n  }\n\n  render() {\n    const { users } = this.state;\n    const { phone, id, name, email } = users;\n    const { clear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <button\n          type=\"button\"\n          onClick={clear}\n          className=\"ui button\"\n        >\n          Clear\n        </button>\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  allUsers: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users';\n\nexport const allTodos = () => fetch(TODOS_URL)\n  .then(response => response.json())\n  .then(todo => todo.data);\n\nexport const allUsers = userId => fetch(`${USERS_URL}/${userId}`)\n  .then(response => response.json())\n  .then(todo => todo.data);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { allTodos, allUsers } from './api';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await allTodos();\n\n    const filterTodos = todos.filter(todo => todo.title && todo.id);\n\n    this.setState({\n      todos: filterTodos,\n    });\n  }\n\n  selectedUser = (idUser) => {\n    // eslint-disable-next-line no-console\n    this.setState({\n      selectedUserId: idUser,\n    });\n  }\n\n  clear = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={this.selectedUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                allUsers={allUsers}\n                clear={this.clear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}